zerops:
  # supports monorepositories, just add
  # one setup section after the other
  - setup: yew
    # ==== how to build your application ====
    build:
      # select what technology should the
      # build container be based on, can
      # be different from service technology
      # see docs for full list
      base: rust@1

      # *optional* add additional dependencies
      # on top of base technology (combination
      # will be cached for next build)
      # prepareCommands:
      #   - apt-get something

      # build your application
      buildCommands:
        - cargo build --verbose
        - ls -la
        - cargo install trunk wasm-bindgen-cli
        - ls -la
        - cargo install --locked trunk
        - ls -la
        - rustup target add wasm32-unknown-unknown
        - ls -la
        - trunk serve --port 3000 --open
        - ls -la

      # select which files / folders to deploy
      # after the build succesfully finished
      deploy:
        - target/~
        - Cargo.lock
        - Cargo.toml


      # *optional*: which files / folders
      # to cache for the next use
      # cache:

    # ==== how to run your application ====
    run:
      # *optional* install dependencies that your
      # runtime service requires (will be cached)
      # prepareCommands:
      #   - apt-get something

      # *optional*: triggered before each start/restart
      # of your application, to eg. clean cache
      # initCommands:
      #  - rm -rf ./cache

      # how to start your application
      start: cargo leptos watch
    envVariables:
      LEPTOS_OUTPUT_NAME: zerops-leptos
      LEPTOS_SITE_ROOT: site
      LEPTOS_SITE_PKG_DIR: pkg
      LEPTOS_SITE_ADDR: 127.0.0.1:3000
      LEPTOS_RELOAD_PORT: 3001